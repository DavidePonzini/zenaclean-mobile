// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MapScreen tests renders correctly 1`] = `
<View
  style={
    Object {
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
>
  <withNavigation(NavigationEvents)
    onWillFocus={[Function]}
  />
  <MapView
    initialRegion={
      Object {
        "latitude": 44.4135423,
        "latitudeDelta": 0.1,
        "longitude": 8.9554223,
        "longitudeDelta": 0.1,
      }
    }
    loadingEnabled={true}
    onRegionChangeComplete={[Function]}
    pitchEnabled={false}
    showsMyLocationButton={false}
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    toolbarEnabled={false}
  >
    <MapMarker
      coordinate={
        Object {
          "latitude": 44.1234,
          "longitude": 8.1234,
        }
      }
      key="0"
      stopPropagation={false}
    >
      <MapCallout
        onPress={[Function]}
        style={
          Object {
            "height": 150,
            "width": 250,
          }
        }
        tooltip={false}
      >
        <Text
          style={
            Object {
              "borderBottomColor": "#EAEAEA",
              "borderBottomWidth": 1,
              "fontFamily": "HelveticaNeue-Italic",
              "fontSize": 19,
              "marginBottom": 5,
              "paddingBottom": 2.5,
              "textAlign": "center",
            }
          }
        >
          Divano abbandonato
        </Text>
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
              "padding": 2.5,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "column",
              }
            }
          >
            <Text
              style={
                Object {
                  "flex": 0.2,
                  "fontSize": 12,
                }
              }
            >
              Via del Camoscio
            </Text>
            <Text
              style={
                Object {
                  "flex": 0.8,
                  "fontFamily": "Avenir-Book",
                  "fontSize": 14,
                }
              }
            >
              Divano abbandonato in via Gramsci
            </Text>
            <Text
              style={
                Object {
                  "color": "#808080",
                  "flex": 0.2,
                  "fontFamily": "Avenir-Book",
                  "fontSize": 12,
                }
              }
            >
              9 Dicembre 2018 alle 17:40
            </Text>
          </View>
        </View>
      </MapCallout>
    </MapMarker>
  </MapView>
  <GooglePlacesAutocomplete
    GooglePlacesSearchQuery={
      Object {
        "rankby": "distance",
        "types": "food",
      }
    }
    GoogleReverseGeocodingQuery={Object {}}
    autoFillOnNotFound={false}
    autoFocus={false}
    currentLocation={false}
    currentLocationLabel="Current location"
    debounce={200}
    editable={true}
    enableEmptySections={true}
    enableHighAccuracyLocation={true}
    enablePoweredByContainer={true}
    fetchDetails={true}
    filterReverseGeocodingByTypes={Array []}
    getDefaultValue={[Function]}
    isRowScrollable={true}
    keyboardShouldPersistTaps="always"
    listViewDisplayed="false"
    minLength={2}
    nearbyPlacesAPI="GooglePlacesSearch"
    numberOfLines={1}
    onFail={[Function]}
    onNotFound={[Function]}
    onPress={[Function]}
    onSubmitEditing={[Function]}
    onTimeout={[Function]}
    placeholder="Search"
    placeholderTextColor="#A8A8A8"
    predefinedPlaces={Array []}
    predefinedPlacesAlwaysVisible={false}
    query={
      Object {
        "key": undefined,
        "language": "en",
        "types": "(cities)",
      }
    }
    renderDescription={[Function]}
    returnKeyType="search"
    styles={
      Object {
        "description": Object {
          "color": "black",
          "fontWeight": "bold",
        },
        "listView": Object {
          "backgroundColor": "#ffffff",
        },
        "textInputContainer": Object {
          "width": "100%",
        },
      }
    }
    suppressDefaultStyles={false}
    textInputHide={false}
    textInputProps={Object {}}
    timeout={20000}
    underlineColorAndroid="transparent"
  />
  <ActionButton
    accessibilityLabel="geolocate-button"
    active={false}
    activeOpacity={0.85}
    autoInactive={true}
    backdrop={false}
    backgroundTappable={false}
    bgColor="transparent"
    bgOpacity={1}
    buttonColor="#FAFAFA"
    buttonText="+"
    buttonTextStyle={Object {}}
    degrees={45}
    fixNativeFeedbackRadius={true}
    nativeFeedbackRippleColor="rgba(255,255,255,0.75)"
    offsetX={-25}
    offsetY={50}
    onPress={[Function]}
    onPressIn={[Function]}
    onPressOn={[Function]}
    outRangeScale={1}
    position="left/center"
    renderIcon={[Function]}
    resetToken={null}
    size={56}
    spacing={20}
    testID="geolocate-button"
    useNativeFeedback={true}
    verticalOrientation="up"
  />
  <ActionButton
    accessibilityLabel="button-add"
    active={false}
    activeOpacity={0.85}
    autoInactive={true}
    backdrop={false}
    backgroundTappable={true}
    bgColor="transparent"
    bgOpacity={1}
    buttonColor="dodgerblue"
    buttonText="+"
    buttonTextStyle={Object {}}
    degrees={45}
    fixNativeFeedbackRadius={true}
    nativeFeedbackRippleColor="rgba(255,255,255,0.75)"
    offsetX={30}
    offsetY={50}
    onPress={[Function]}
    onPressIn={[Function]}
    onPressOn={[Function]}
    onReset={[Function]}
    outRangeScale={1}
    position="right"
    resetToken={null}
    size={56}
    spacing={20}
    testID="button-add"
    useNativeFeedback={true}
    verticalOrientation="up"
  />
</View>
`;
